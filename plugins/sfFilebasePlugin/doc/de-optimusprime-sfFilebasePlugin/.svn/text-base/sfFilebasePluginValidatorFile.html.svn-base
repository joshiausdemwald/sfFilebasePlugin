<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
  <html xmlns="http://www.w3.org/1999/xhtml">
		<head>
			<!-- template designed by Marco Von Ballmoos  -->
			<title>Docs For Class sfFilebasePluginValidatorFile</title>
			<link rel="stylesheet" href="../media/stylesheet.css" />
						<script src="../media/lib/classTree.js"></script>
												<script language="javascript" type="text/javascript">
				var imgPlus = new Image();
				var imgMinus = new Image();
				imgPlus.src = "../media/images/plus.png";
				imgMinus.src = "../media/images/minus.png";
				
				function showNode(Node){
							switch(navigator.family){
								case 'nn4':
									// Nav 4.x code fork...
							var oTable = document.layers["span" + Node];
							var oImg = document.layers["img" + Node];
									break;
								case 'ie4':
									// IE 4/5 code fork...
							var oTable = document.all["span" + Node];
							var oImg = document.all["img" + Node];
									break;
								case 'gecko':
									// Standards Compliant code fork...
							var oTable = document.getElementById("span" + Node);
							var oImg = document.getElementById("img" + Node);
									break;
							}
					oImg.src = imgMinus.src;
					oTable.style.display = "block";
				}
				
				function hideNode(Node){
							switch(navigator.family){
								case 'nn4':
									// Nav 4.x code fork...
							var oTable = document.layers["span" + Node];
							var oImg = document.layers["img" + Node];
									break;
								case 'ie4':
									// IE 4/5 code fork...
							var oTable = document.all["span" + Node];
							var oImg = document.all["img" + Node];
									break;
								case 'gecko':
									// Standards Compliant code fork...
							var oTable = document.getElementById("span" + Node);
							var oImg = document.getElementById("img" + Node);
									break;
							}
					oImg.src = imgPlus.src;
					oTable.style.display = "none";
				}
				
				function nodeIsVisible(Node){
							switch(navigator.family){
								case 'nn4':
									// Nav 4.x code fork...
							var oTable = document.layers["span" + Node];
									break;
								case 'ie4':
									// IE 4/5 code fork...
							var oTable = document.all["span" + Node];
									break;
								case 'gecko':
									// Standards Compliant code fork...
							var oTable = document.getElementById("span" + Node);
									break;
							}
					return (oTable && oTable.style.display == "block");
				}
				
				function toggleNodeVisibility(Node){
					if (nodeIsVisible(Node)){
						hideNode(Node);
					}else{
						showNode(Node);
					}
				}
			</script>
					</head>
		<body>
			<div class="page-body">			
<h2 class="class-name">Class sfFilebasePluginValidatorFile</h2>

<a name="sec-description"></a>
<div class="info-box">
	<div class="info-box-title">Description</div>
	<div class="nav-bar">
					<span class="disabled">Description</span> |
															<a href="#sec-method-summary">Methods</a> (<a href="#sec-methods">details</a>)
						
					</div>
	<div class="info-box-body">
        		<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">sfFilebasePluginValidatorFile validates uploaded files, internally based  on sfFilebasePluginUploadedFile object, not on the raw file-array that you  can access through sfWebRequest::getFiles() or php internal $_FILES globals.</p>
<p class="description"><p>This class is derived from the original sfValidatorFile, written by  Fabien Potencier.</p></p>
	<ul class="tags">
				<li><span class="field">see:</span> sfValidatorFile</li>
			</ul>
		<p class="notes">
			Located in <a class="field" href="_lib---validator---sfFilebasePluginValidatorFile.php.html">/lib/validator/sfFilebasePluginValidatorFile.php</a> (line <span class="field">24</span>)
		</p>
		
				
		<pre>sfValidatorFile
   |
   --sfFilebasePluginValidatorFile</pre>
	
			</div>
</div>




	<a name="sec-method-summary"></a>
	<div class="info-box">
		<div class="info-box-title">Method Summary</span></div>
		<div class="nav-bar">
			<a href="#sec-description">Description</a> |
												<span class="disabled">Methods</span> (<a href="#sec-methods">details</a>)
		</div>
		<div class="info-box-body">			
			<div class="method-summary">
																																																						
				<div class="method-definition">
											<span class="method-result"><a href="../de-optimusprime-sfFilebasePlugin/sfFilebasePluginUploadedFile.html">sfFilebasePluginUploadedFile</a></span>
										<a href="#clean" title="details" class="method-name">clean</a>
											(<span class="var-type"><a href="../de-optimusprime-sfFilebasePlugin/sfFilebasePluginUploadedFile.html">sfFilebasePluginUploadedFile</a></span>&nbsp;<span class="var-name">$value</span>)
									</div>
														
				<div class="method-definition">
											<span class="method-result">void</span>
										<a href="#configure" title="details" class="method-name">configure</a>
											([<span class="var-type">array</span>&nbsp;<span class="var-name">$options</span> = <span class="var-default">array()</span>], [<span class="var-type">array</span>&nbsp;<span class="var-name">$messages</span> = <span class="var-default">array()</span>])
									</div>
														
				<div class="method-definition">
											<span class="method-result"><a href="../de-optimusprime-sfFilebasePlugin/sfFilebasePluginUploadedFile.html">sfFilebasePluginUploadedFile</a></span>
										<a href="#doClean" title="details" class="method-name">doClean</a>
											(<span class="var-type"></span>&nbsp;<span class="var-name">$value</span>)
									</div>
														
				<div class="method-definition">
											<span class="method-result">string</span>
										<a href="#getMimeType" title="details" class="method-name">getMimeType</a>
											(<span class="var-type">string</span>&nbsp;<span class="var-name">$file</span>, <span class="var-type">string</span>&nbsp;<span class="var-name">$fallback</span>)
									</div>
														
				<div class="method-definition">
											<span class="method-result">void</span>
										<a href="#isEmpty" title="details" class="method-name">isEmpty</a>
											(<span class="var-type"></span>&nbsp;<span class="var-name">$value</span>)
									</div>
											</div>
		</div>
	</div>		

	
	<a name="sec-methods"></a>
	<div class="info-box">
		<div class="info-box-title">Methods</div>
		<div class="nav-bar">
			<a href="#sec-description">Description</a> |
																<a href="#sec-method-summary">Methods</a> (<span class="disabled">details</span>)
						
		</div>
		<div class="info-box-body">
			<A NAME='method_detail'></A>
<a name="methodclean" id="clean"><!-- --></a>
<div class="oddrow">
	
	<div class="method-header">
		<span class="method-title">clean</span> (line <span class="line-number">116</span>)
	</div> 
	
	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Cleans the input value.</p>
<p class="description"><p>This method is also responsible for trimming the input value  and checking the required option.</p></p>
	<ul class="tags">
				<li><span class="field">throws:</span> sfValidatorError</li>
				<li><span class="field">access:</span> public</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result"><a href="../de-optimusprime-sfFilebasePlugin/sfFilebasePluginUploadedFile.html">sfFilebasePluginUploadedFile</a></span>
		<span class="method-name">
			clean
		</span>
					(<span class="var-type"><a href="../de-optimusprime-sfFilebasePlugin/sfFilebasePluginUploadedFile.html">sfFilebasePluginUploadedFile</a></span>&nbsp;<span class="var-name">$value</span>)
			</div>
	
			<ul class="parameters">
					<li>
				<span class="var-type"><a href="../de-optimusprime-sfFilebasePlugin/sfFilebasePluginUploadedFile.html">sfFilebasePluginUploadedFile</a></span>
				<span class="var-name">$value</span><span class="var-description">: || array $value The input value</span>			</li>
				</ul>
		
			
	</div>
<a name="methodconfigure" id="configure"><!-- --></a>
<div class="evenrow">
	
	<div class="method-header">
		<span class="method-title">configure</span> (line <span class="line-number">71</span>)
	</div> 
	
	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Configures the current validator.</p>
<p class="description"><p>The api for sfFilebasePluginValidatorFile is derived from sfValidatorFile.  So there are only little changes in handling, but the return value  is of type sfFilebaseUploadedFile, which have a few ways to deal with  uploaded files, move them, create thumbnails and so on...</p><p>There are no mime guessers, the sfFilebasePluginUploadedFilesManager  deals with that when you call sfFilebasePlugin::getUploadedFiles().</p><p>There is also no path to specify, you do that later directly by calling  sfFilebasePluginUploadedFile::moveUploadedFile</p><p>As a compromise, you cannot specify your own fileclass anymore, beside  extending sfFilebaseUploadedFile and -manager.</p><p>Available options:</p><p>* max_size:             The maximum file size   * mime_types:           Allowed mime types array or category (available categories: web_images)   * mime_type_guessers:   An array of mime type guesser PHP callables (must return the mime type or null)   * mime_categories:      An array of mime type categories (web_images is defined by default)   * path:                 The path where to save the file - as used by the sfValidatedFile class (optional)   * validated_file_class: Name of the class that manages the cleaned uploaded file (optional)   * allow_overwrite:       If set to true, existing files will be overwritten. Otherwise, an form field error will rise (optional)                           This comes only in effect, if path is set (otherwise you'd to save the file manually)   * filebase              Instance of filebase, needed if you want to save the file under another location than the                           symfony default filebasePlugindDirectory (web/uploads) (optional)</p><p>Available error codes:</p><p>* max_size   * mime_types   * partial   * no_tmp_dir   * cant_write   * extension</p></p>
	<ul class="tags">
				<li><span class="field">see:</span> sfValidatorFile</li>
				<li><span class="field">see:</span> sfValidatorBase</li>
				<li><span class="field">access:</span> protected</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			configure
		</span>
					([<span class="var-type">array</span>&nbsp;<span class="var-name">$options</span> = <span class="var-default">array()</span>], [<span class="var-type">array</span>&nbsp;<span class="var-name">$messages</span> = <span class="var-default">array()</span>])
			</div>
	
			<ul class="parameters">
					<li>
				<span class="var-type">array</span>
				<span class="var-name">$options</span><span class="var-description">: An array of options</span>			</li>
					<li>
				<span class="var-type">array</span>
				<span class="var-name">$messages</span><span class="var-description">: An array of error messages</span>			</li>
				</ul>
		
			
	</div>
<a name="methoddoClean" id="doClean"><!-- --></a>
<div class="oddrow">
	
	<div class="method-header">
		<span class="method-title">doClean</span> (line <span class="line-number">160</span>)
	</div> 
	
	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">This validator returns a sfFilebasePluginUploadedFile object.</p>
<p class="description"><p>The input value must be an instance of sfFilebasePluginUploadedFile</p></p>
	<ul class="tags">
				<li><span class="field">see:</span> sfValidatorBase</li>
				<li><span class="field">see:</span> <a href="../de-optimusprime-sfFilebasePlugin/sfFilebasePluginUploadedFile.html">sfFilebasePluginUploadedFile</a></li>
				<li><span class="field">access:</span> protected</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result"><a href="../de-optimusprime-sfFilebasePlugin/sfFilebasePluginUploadedFile.html">sfFilebasePluginUploadedFile</a></span>
		<span class="method-name">
			doClean
		</span>
					(<span class="var-type"></span>&nbsp;<span class="var-name">$value</span>)
			</div>
	
			<ul class="parameters">
					<li>
				<span class="var-type"></span>
				<span class="var-name">$value</span>			</li>
				</ul>
		
			
	</div>
<a name="methodgetMimeType" id="getMimeType"><!-- --></a>
<div class="evenrow">
	
	<div class="method-header">
		<span class="method-title">getMimeType</span> (line <span class="line-number">251</span>)
	</div> 
	
	<!-- ========== Info from phpDoc block ========= -->
<p class="short-description">Returns the mime type of a file.</p>
<p class="description"><p>This methods call each mime_type_guessers option callables to  guess the mime type.</p><p>Proxy for sfFilebasePluginFile::getMimeType()</p></p>
	<ul class="tags">
				<li><span class="field">return:</span> The mime type of the file (fallback is returned if not guessable)</li>
				<li><span class="field">see:</span> <a href="../de-optimusprime-sfFilebasePlugin/sfFilebasePluginFile.html#methodgetMimeType">sfFilebasePluginFile::getMimeType()</a></li>
				<li><span class="field">access:</span> protected</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">string</span>
		<span class="method-name">
			getMimeType
		</span>
					(<span class="var-type">string</span>&nbsp;<span class="var-name">$file</span>, <span class="var-type">string</span>&nbsp;<span class="var-name">$fallback</span>)
			</div>
	
			<ul class="parameters">
					<li>
				<span class="var-type">string</span>
				<span class="var-name">$file</span><span class="var-description">: The absolute path of a file</span>			</li>
					<li>
				<span class="var-type">string</span>
				<span class="var-name">$fallback</span><span class="var-description">: The default mime type to return if not guessable</span>			</li>
				</ul>
		
			
	</div>
<a name="methodisEmpty" id="isEmpty"><!-- --></a>
<div class="oddrow">
	
	<div class="method-header">
		<span class="method-title">isEmpty</span> (line <span class="line-number">259</span>)
	</div> 
	
	<!-- ========== Info from phpDoc block ========= -->
	<ul class="tags">
				<li><span class="field">see:</span> sfValidatorBase</li>
				<li><span class="field">access:</span> protected</li>
			</ul>
	
	<div class="method-signature">
		<span class="method-result">void</span>
		<span class="method-name">
			isEmpty
		</span>
					(<span class="var-type"></span>&nbsp;<span class="var-name">$value</span>)
			</div>
	
			<ul class="parameters">
					<li>
				<span class="var-type"></span>
				<span class="var-name">$value</span>			</li>
				</ul>
		
			
	</div>
						
		</div>
	</div>


	<p class="notes" id="credit">
		Documentation generated on Wed, 14 Oct 2009 16:21:01 +0200 by <a href="http://www.phpdoc.org" target="_blank">phpDocumentor 1.4.3</a>
	</p>
	</div></body>
</html>